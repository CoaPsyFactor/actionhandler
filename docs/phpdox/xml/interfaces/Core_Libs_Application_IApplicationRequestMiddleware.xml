<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Core\Libs\Application\IApplicationRequestMiddleware" namespace="Core\Libs\Application" name="IApplicationRequestMiddleware" abstract="false" final="false" start="15" end="26">
  <file path="/Users/coa/projects/AppIdea/Core/Libs/Application" file="IApplicationRequestMiddleware.php" realpath="/Users/coa/projects/AppIdea/Core/Libs/Application/IApplicationRequestMiddleware.php" size="756" time="2017-06-29T15:41:35+00:00" unixtime="1498750895" sha1="e0ddec9e2b8354cccb126f0ff7e297109bc039ab" relative="Libs/Application/IApplicationRequestMiddleware.php"/>
  <docblock>
    <description compact="Implementing this interface into &quot;IApplicationRequestHandler&quot; will tell &quot;Application&quot; that it should execute middlewares added to &quot;Middleware&quot; class before request handler is executed. If there are some unfinished (not executed) middlewares, script will prevent request handler to be executed, and finish request (send response)"/>
    <package value="Core\Libs\Application"/>
  </docblock>
  <method name="middleware" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Used to register all middlewares that should be executed before handling acton"/>
      <param type="object" variable="$middleware">
        <type full="Core\Libs\Middleware\Middleware" namespace="Core\Libs\Middleware" name="Middleware"/>
      </param>
      <return type="object">
        <type full="Core\Libs\Middleware\Middleware" namespace="Core\Libs\Middleware" name="Middleware"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Core\Libs\Middleware\Middleware" namespace="Core\Libs\Middleware" name="Middleware"/>
    </return>
    <parameter name="middleware" byreference="false" type="object">
      <type full="Core\Libs\Middleware\Middleware" namespace="Core\Libs\Middleware" name="Middleware"/>
    </parameter>
  </method>
</interface>
