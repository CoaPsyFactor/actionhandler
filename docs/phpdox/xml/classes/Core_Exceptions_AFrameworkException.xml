<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Core\Exceptions\AFrameworkException" namespace="Core\Exceptions" name="AFrameworkException" abstract="true" final="false" start="11" end="33">
  <file path="/Users/coa/projects/AppIdea/Core/Exceptions" file="AFrameworkException.php" realpath="/Users/coa/projects/AppIdea/Core/Exceptions/AFrameworkException.php" size="799" time="2017-06-29T16:50:12+00:00" unixtime="1498755012" sha1="412c4ee14179700d8c51ab1d62c0e3778db1cf53" relative="Exceptions/AFrameworkException.php"/>
  <docblock>
    <description compact="To use proper error messaging in exceptions extend this class in custom exceptions instead of \Exception"/>
    <package value="Core\Exceptions"/>
  </docblock>
  <extends full="Exception" namespace="" name="Exception"/>
  <member name="_errors" visibility="protected" static="false" line="17">
    <docblock>
      <description/>
      <var/>
    </docblock>
  </member>
  <constructor name="__construct" start="25" end="31" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="AFrameworkException constructor."/>
      <param description="Exception Code" type="int" variable="$code"/>
      <param description="Additional message" type="object" variable="$message">
        <type full="Core\Exceptions\string|null" namespace="Core\Exceptions" name="string|null"/>
      </param>
      <param type="object" variable="$previous">
        <type full="\Exception|null" namespace="" name="Exception|null"/>
      </param>
    </docblock>
    <parameter name="code" byreference="false" type="object">
      <type full="Core\Exceptions\int" namespace="Core\Exceptions" name="int"/>
    </parameter>
    <parameter name="message" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Core\Exceptions\string" namespace="Core\Exceptions" name="string"/>
    </parameter>
    <parameter name="previous" byreference="false" type="{unknown}" default="" constant="null">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </constructor>
  <parent full="Exception" namespace="" name="Exception">
    <member name="message" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception message"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="code" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception code"/>
      <var type="int"/>
    </docblock>
  </member>
    <member name="file" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The filename where the exception was created"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="line" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The line where the exception was created"/>
      <var type="int"/>
    </docblock>
  </member>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct the exception"/>
      <return type="void"/>
    </docblock>
    <parameter name="message" optional="true" byreference="false" type="string"/>
    <parameter name="code" optional="true" byreference="false" type="int"/>
    <parameter name="previous" optional="true" byreference="false" type="object" class="Throwable"/>
  </constructor>
    <method name="getMessage" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception message"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getPrevious" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Returns previous Exception"/>
      <return type="Throwable"/>
    </docblock>
  </method>
    <method name="getCode" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception code"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getFile" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the file in which the exception was created"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getLine" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the line in which the exception was created"/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="getTrace" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace"/>
      <return type="array"/>
    </docblock>
  </method>
    <method name="getTraceAsString" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace as a string"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="String representation of the exception"/>
      <return type="string"/>
    </docblock>
  </method>
  </parent>
</class>
