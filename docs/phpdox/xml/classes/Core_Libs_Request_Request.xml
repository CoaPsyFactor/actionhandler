<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Core\Libs\Request\Request" namespace="Core\Libs\Request" name="Request" abstract="false" final="false" start="16" end="261">
  <file path="/Users/coa/projects/AppIdea/Core/Libs/Request" file="Request.php" realpath="/Users/coa/projects/AppIdea/Core/Libs/Request/Request.php" size="5687" time="2017-06-29T16:51:34+00:00" unixtime="1498755094" sha1="2bbe9fa4cdeff20ea7c145ff246f266ad15ea9ff" relative="Libs/Request/Request.php"/>
  <docblock>
    <description compact="Request class is here to hold all required request input values (GET, POST, PUT, PATCH, DELETE), also current request method"/>
    <package value="Core\Libs\Request"/>
  </docblock>
  <uses full="Core\CoreUtils\Singleton" namespace="Core\CoreUtils" name="Singleton" start="19" end="19"/>
  <member name="_method" visibility="private" static="false" line="22">
    <docblock>
      <var description="Holds current method identifier e.g GET" type="string"/>
    </docblock>
  </member>
  <member name="_query" visibility="private" static="false" line="25">
    <docblock>
      <var description="Holds all query (GET) parameters" type="array"/>
    </docblock>
  </member>
  <member name="_data" visibility="private" static="false" line="28">
    <docblock>
      <var description="Holds all body data (POST) parameters" type="array"/>
    </docblock>
  </member>
  <member name="_router" visibility="private" static="false" line="31">
    <docblock>
      <var type="object">
        <type full="Core\Libs\Router\Router" namespace="Core\Libs\Router" name="Router"/>
      </var>
    </docblock>
  </member>
  <member name="_filter" visibility="private" static="false" line="34">
    <docblock>
      <var type="object">
        <type full="Core\Libs\Request\IRequestFilter" namespace="Core\Libs\Request" name="IRequestFilter"/>
      </var>
    </docblock>
  </member>
  <member name="_all" visibility="private" static="false" line="42">
    <docblock>
      <description compact="Holds Route Parameters, Query Parameters and Form Body Data as merged array"/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_token" visibility="private" static="false" line="45">
    <docblock>
      <var type="object">
        <type full="Api\Models\Token" namespace="Api\Models" name="Token"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="47" end="67" abstract="false" final="false" static="false" visibility="public"/>
  <method name="method" start="72" end="76" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return description="Current request method" type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="query" start="86" end="89" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieves query (GET) parameter matching given key"/>
      <param type="string" variable="$key"/>
      <param type="mixed" variable="$default"/>
      <return type="object">
        <type full="Core\Libs\Request\null|string" namespace="Core\Libs\Request" name="null|string"/>
      </return>
    </docblock>
    <parameter name="key" byreference="false" type="object">
      <type full="Core\Libs\Request\string" namespace="Core\Libs\Request" name="string"/>
    </parameter>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="parameter" start="99" end="105" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieve specific parameter value from url"/>
      <param type="string" variable="$key"/>
      <param type="null" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="object">
      <type full="Core\Libs\Request\string" namespace="Core\Libs\Request" name="string"/>
    </parameter>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="data" start="115" end="119" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieves body data (POST) parameter matching given key"/>
      <param type="string" variable="$key"/>
      <param type="mixed" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="object">
      <type full="Core\Libs\Request\string" namespace="Core\Libs\Request" name="string"/>
    </parameter>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getData" start="127" end="131" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all POST body data"/>
      <return type="array"/>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="getQuery" start="139" end="143" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all url query data"/>
      <return type="array"/>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="getParameters" start="151" end="155" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Retrieve all URL parameters values"/>
      <return type="array"/>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="get" start="171" end="176" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get value matching key in any of input arrays POST, GET, URL Parameters">NOTE: In case that there are multiple keys with same name on different arrays e.g "id" in both URL and Form Body
following system of prioritizing is applied
 1. POST
 2. If not in POST look GET
 3. If not in none of above look in URL Parameters</description>
      <param type="string" variable="$key"/>
      <param type="null" variable="$default"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="object">
      <type full="Core\Libs\Request\string" namespace="Core\Libs\Request" name="string"/>
    </parameter>
    <parameter name="default" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="getAll" start="190" end="199" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all key =&gt; value pairs from any input POST, GET, URL Parameter">NOTE: In case that there are multiple keys with same name on different arrays (e.g "id" in both URL and Form Body)
following system of prioritizing is applied
 1. POST
 2. If not in POST look GET
 3. If not in none of above look in URL Parameters</description>
      <return type="array"/>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <method name="setToken" start="208" end="214" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set valid token for current request"/>
      <param type="object" variable="$token">
        <type full="Api\Models\Token" namespace="Api\Models" name="Token"/>
      </param>
      <return type="object">
        <type full="Core\Libs\Request\Request" namespace="Core\Libs\Request" name="Request"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Core\Libs\Request\Request" namespace="Core\Libs\Request" name="Request"/>
    </return>
    <parameter name="token" byreference="false" type="object">
      <type full="Api\Models\Token" namespace="Api\Models" name="Token"/>
    </parameter>
  </method>
  <method name="token" start="222" end="226" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get current request token"/>
      <return type="object">
        <type full="Core\Libs\Request\Token|null" namespace="Core\Libs\Request" name="Token|null"/>
      </return>
    </docblock>
    <return type="object" nullable="true">
      <type full="Api\Models\Token" namespace="Api\Models" name="Token"/>
    </return>
  </method>
  <method name="setFilter" start="235" end="241" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set request input filter used to transform values to desire type/value"/>
      <param type="object" variable="$filter">
        <type full="Core\Libs\Request\IRequestFilter" namespace="Core\Libs\Request" name="IRequestFilter"/>
      </param>
      <return type="object">
        <type full="Core\Libs\Request\Request" namespace="Core\Libs\Request" name="Request"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Core\Libs\Request\Request" namespace="Core\Libs\Request" name="Request"/>
    </return>
    <parameter name="filter" byreference="false" type="object">
      <type full="Core\Libs\Request\IRequestFilter" namespace="Core\Libs\Request" name="IRequestFilter"/>
    </parameter>
  </method>
  <method name="_getFilterValue" start="251" end="260" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Executes all filters for given field, and return final value, in case that there are no filter original value is returned"/>
      <param type="string" variable="$field"/>
      <param type="null" variable="$value"/>
      <return type="object">
        <type full="Core\Libs\Request\mixed|null" namespace="Core\Libs\Request" name="mixed|null"/>
      </return>
    </docblock>
    <parameter name="field" byreference="false" type="object">
      <type full="Core\Libs\Request\string" namespace="Core\Libs\Request" name="string"/>
    </parameter>
    <parameter name="value" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <trait full="Core\CoreUtils\Singleton" namespace="Core\CoreUtils" name="Singleton">
    <method name="getSharedInstance" start="19" end="26" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Core\CoreUtils\object|$this" namespace="Core\CoreUtils" name="object|$this"/>
      </return>
    </docblock>
  </method>
    <method name="getSharedInstanceArgs" start="32" end="35" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="array" variable="$arguments"/>
      <return type="object">
        <type full="Core\CoreUtils\$this|object" namespace="Core\CoreUtils" name="$this|object"/>
      </return>
    </docblock>
    <parameter name="arguments" byreference="false" type="array"/>
  </method>
    <method name="getNewInstance" start="40" end="43" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="object">
        <type full="Core\CoreUtils\mixed|$this" namespace="Core\CoreUtils" name="mixed|$this"/>
      </return>
    </docblock>
  </method>
    <method name="getNewInstanceArgs" start="49" end="52" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="array" variable="$arguments"/>
      <return type="object">
        <type full="Core\CoreUtils\$this" namespace="Core\CoreUtils" name="$this"/>
      </return>
    </docblock>
    <parameter name="arguments" byreference="false" type="array"/>
  </method>
  </trait>
</class>
